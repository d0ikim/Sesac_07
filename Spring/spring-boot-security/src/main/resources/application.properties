# application.properties 파일 : Node.js 에서의 .env(환경변수)파일과 역할이 유사한 '환경설정 파일'
# src/main/resources/
#  ㄴ application.properties      : 공통 설정 - spring.application.name=어쩌구, spring.jpa.show-sql=true, spring.jpa.hibernate.ddl-auto=update 등
#  ㄴ application-dev.properties  : 개발 환경 - spring.datasource.url=jdbc:mysql://어쩌구:포트/어쩌구_dev?**... 등 DB접속주소를 개발용으로 달리설정해주거나
#  ㄴ application-test.properties : 테스트 환경 - server.address=localhost && server.port=7070 등 포트번호 다르게하거나, spring.datasource.url=jdbc:h2:mem:testdb(인메모리DB) 등으로 다르게 돌아가게
#  ㄴ application-prod.properties : 운영 환경 - server.address=0.0.0.0(외부 접속 가능하게) && server.port=8080, spring.datasource.url=jdbc:mysql://{prod-db-server}:3305/어쩌구?**... 로 DB접속주소를 달리설정

spring.application.name=spring-boot-security

# 서버 설정 (최종프로젝트시 필요)
#server.address=localhost
#server.port=8080

# 데이터베이스 연결
spring.datasource.url=jdbc:mysql://localhost:3306/minitodo?useSSL=false&characterEncoding=UTF-8&ServerTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.drive-class=com.mysql.cj.jdbc.Driver

# JPA 설정
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update